---
--- Generated by Luanalysis
--- Created by kigawa.
--- DateTime: 2023/01/29 1:00
---
local NumChannel = {
--- @return number
getRps = function()
    return input.getNumber(1)
end;
--- @return number
getThrottle = function()
    return input.getNumber(2)
end;
--- @param value number
setClutch = function(value)
    output.setNumber(3, value)
end;
}
local BoolChannel = {
--- @param value boolean
setOne = function(value)
    output.setBool(1, value)
end;
--- @param value boolean
setTwo = function(value)
    output.setBool(2, value)
end;
--- @param value boolean
setThree = function(value)
    output.setBool(3, value)
end;
--- @param value boolean
setFor = function(value)
    output.setBool(4, value)
end;
--- @param value boolean
setBack = function(value)
    output.setBool(5, value)
end;
}
local Property = {
--- @field targetRps number
targetRps = property.getNumber("target rps");
--- @field targetRps number
changeRate = property.getNumber("change rate");
}
-- ---------------------------------------------------------
local Rps = {
MIN = 0;
MAX = 65;
}
-- ---------------------------------------------------------
local Gear = {
--- @field one boolean
one = false;
--- @field two boolean
two = false;
--- @field three boolean
three = false;
--- @field four boolean
four = false;
}
---@return boolean
function Gear.isMax()
return Gear.one and Gear.two and Gear.three and Gear.four
end
function Gear.isMin()
return not (Gear.one or Gear.two or Gear.three or Gear.four)
end
function Gear.up()
if Gear.One then
    if Gear.Two then
        return
    end
    Gear.One = false
    Gear.Two = true
    return
end

if Gear.Two then
    if Gear.Three then
        Gear.One = true
        return
    end
    Gear.Two = false
    Gear.Three = true
    return
end

if Gear.Three then
    if Gear.Four then
        Gear.One = true
        return
    end
    Gear.Three = false
    Gear.Four = true
    return
end
Gear.One = true
return
end
function Gear.down()
if Gear.One then
    Gear.One = false
    return
end
if Gear.Two then
    Gear.One = true
    Gear.Two = false
    return
end
if Gear.Three then
    Gear.Two = true
    Gear.Three = false
    return
end
if Gear.four then
    Gear.Three = true
    Gear.Four = false
    return
end
return
end
-- ---------------------------------------------------------
local Clutch = {
--- @field percent number
percent = 0
}
--- @param percent number
function Clutch.setClutch(percent)
Clutch.percent = percent
if Clutch.percent > 100 then
    Clutch.percent = 100
end
if Clutch.percent < 0 then
    Clutch.percent = 0
end
NumChannel.setClutch(percent / 100)
end
---@param percentDiff number
function Clutch.up(percentDiff)
Clutch.setClutch(Clutch.percent + percentDiff)
end
---@param percentDiff number
function Clutch.down(percentDiff)
Clutch.setClutch(Clutch.percent - percentDiff)
end
-- ---------------------------------------------------------
local function onEnd()
BoolChannel.setOne(Gear.one)
BoolChannel.setTwo(Gear.two)
BoolChannel.setThree(Gear.three)
BoolChannel.setFor(Gear.four)
end
-- ---------------------------------------------------------
local function up()
if Clutch.percent < 100 then
    Clutch.up(1)
    return
end
if Gear.isMax() then
    return
end
Gear.up()
Clutch.setClutch(0)
end
local function down()
if Clutch.percent > 0 then
    Clutch.down(1)
    return
end
if Gear.isMin() then
    return
end
Gear.down()
Clutch.setClutch(100)
end
-- ---------------------------------------------------------
function onTick()
local currentRps = NumChannel.getRps()
local throttle = NumChannel.getThrottle()
if throttle > 0 then
    BoolChannel.setBack(false)
elseif throttle < 0 then
    BoolChannel.setBack(true)
else
    return
end
if currentRps > Property.targetRps then
    up()
else
    down()
end
onEnd()
end